apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 2
        versionName "1.0.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

tasks.withType(Javadoc) {
    options.addBooleanOption('Xdoclint:none', true)
}

allprojects {
    tasks.withType(Javadoc).all {
        enabled = false
    }

    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'

    implementation 'com.kyoapps:zkotlinextensions:1.0.24'


    // RxJava
    def rx_version = '3.0.0'
    implementation "io.reactivex.rxjava3:rxandroid:$rx_version"
    implementation "io.reactivex.rxjava3:rxjava:$rx_version"
    implementation "com.github.akarnokd:rxjava3-retrofit-adapter:$rx_version"
    implementation "com.github.akarnokd:rxjava3-bridge:$rx_version" //todo remove once room supports rxjava3

    // Json
    def moshi_version = '1.9.2'
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    implementation 'com.squareup.retrofit2:converter-moshi:2.8.1'
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"


    // Network
    def retrofit_version = '2.8.1'
    // implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation 'com.squareup.okhttp3:okhttp:4.5.0'
    implementation 'com.squareup.okio:okio:2.5.0'

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

}

ext {
    developerId = 'shamo42'
    bintrayRepo = 'Crypto' // Bintray module name
    bintrayName = 'com.zeitheist.cryptoexchange'   // Bintray package name

    publishedGroupId = 'com.zeitheist'
    libraryName = 'cryptoexchange'
    artifact = 'cryptoexchangelib'

    libraryDescription = 'Crypto exchange library in Kotlin'

    // Your github repo link
    siteUrl = 'https://github.com/shamo42/cryptoexchange'
    gitUrl = 'https://github.com/shamo42/cryptoexchange.git'
    githubRepository= 'shamo42/cryptoexchange'

    libraryVersion = '1.0.2'

    developerName = 'Wiltgen'
    developerEmail = 'number28@gmx.net'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}
apply from: 'https://raw.githubusercontent.com/tntkhang/library-to-bintray/master/install.gradle'
apply from: 'https://raw.githubusercontent.com/tntkhang/library-to-bintray/master/bintray.gradle'
// --> gradlew clean build install bintrayUpload